#function to prompt for username and password to run the program
login(){
    echo -n '[gtran] Username : '
    read username
    # echo -n '[gtran] Password : '
    # read -s password
    validate_login
}

#function to check if the user has been created or not
validate_login(){
    while read users; do
        if [[ $username = $users ]];then return 0; fi
    done < ~/gtran/config/users
    echo "Incorrect Login"
    login
} 

#function to load the transactions file contents of user into an txn array
load_transactions(){
while read v; do
if [[ $v =~ ^([a-z ]+):(-?[0-9]+)$ ]]; then
    txn["${BASH_REMATCH[1]}"]="${BASH_REMATCH[2]}"
fi
done < ~/gtran/users/$username/transactions
}

#function to do the core work
process_input(){
    if [[ ${txn[$1]} ]]; then #if no missing key
        txn["$1"]=$(( txn["$1"]+$2 )) #update existing transaction 
    else
        confirm_new_entry $1 $2 #promt for inserting new entry
    fi
}

#function to ask to add new entry
confirm_new_entry(){
    echo $1 is not enetered
    echo -n '[gtran] Add new Entry (y/n) ? '
    read addnew
    if [[ $addnew = 'y' ]]
    then 
    txn["$1"]=$2 
    fi
}

#function to store the transactions in the file again
update_file(){
    echo -n '' > ~/gtran/users/$username/transactions.test
    for i in ${!txn[@]}; do
    echo $i:${txn["$i"]} >> ~/gtran/users/$username/transactions
    done 
}

display(){
    for i in ${!txn[@]};do echo "$i --> ${txn["$i"]}"; done
}
